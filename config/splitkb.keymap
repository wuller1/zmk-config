/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <24 23>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <24 25>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 17>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <18 17>;
        };

        Right_Bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <27 26>;
        };

        clear_bt {
            bindings = <&bt BT_CLR>;
            key-positions = <34 35>;
        };

        win_varm_layer {
            bindings = <&to 0>;
            key-positions = <38 39>;
        };

        mac_varm_vim_layer {
            bindings = <&to 3>;
            key-positions = <50 49>;
        };

        mac_varm_layer {
            bindings = <&to 2>;
            key-positions = <50 51>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 42 43 44 45 46 47 54 55 56 57 58 59>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 35 36 37 38 39 40 41 48 49 50 51 52 53 60 61 62 63 64 65>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        windows_layer {
            bindings = <
&kp EQUAL        &kp NUMBER_1         &kp NUMBER_2     &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &none         &none          &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0                  &kp MINUS
&kp TAB          &kp Q                &kp W            &kp E         &kp R         &kp T         &none         &none          &kp Y         &kp U         &kp I         &kp O         &kp P                         &kp LEFT_BRACKET
&kp ESC          &hml LEFT_CONTROL A  &kp S            &kp D         &lt 1 F       &kp G         &none         &none          &kp H         &lt 1 J       &kp K         &kp L         &hmr RIGHT_CONTROL SEMICOLON  &kp SQT
&kp RIGHT_SHIFT  &kp Z                &kp X            &kp C         &kp V         &kp B                                      &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH                      &kp RIGHT_SHIFT
&none            &kp C_VOLUME_DOWN    &kp C_VOLUME_UP  &kp LEFT_ALT  &kp SPACE                   &kp LEFT_GUI  &kp RIGHT_WIN                &kp SPACE     &kp LEFT_ALT  &kp GRAVE     &kp BACKSLASH                 &none
            >;
        };

        windows_vim_layer {
            bindings = <
&none            &none             &none          &none  &kp END        &none         &none  &none  &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))  &kp RG(RC(LEFT))  &kp RG(RC(RIGHT))  &kp HOME           &none
&kp TAB          &none             &kp LC(RIGHT)  &none  &kp LS(LC(Z))  &none         &none  &none  &kp LC(C)         &kp LC(Z)          &kp LA(S)         &kp LA(G)          &kp LC(V)          &kp RIGHT_BRACKET
&kp ESC          &kp LEFT_CONTROL  &none          &none  &none          &none         &none  &none  &kp LEFT          &kp DOWN           &kp UP            &kp RIGHT          &kp RIGHT_CONTROL  &none
&kp RIGHT_SHIFT  &none             &none          &none  &none          &kp LC(LEFT)                &kp RG(RS(LEFT))  &kp RG(RS(RIGHT))  &kp LA(H)         &kp LA(L)          &kp LC(F)          &kp RIGHT_SHIFT
&none            &none             &none          &none  &none                        &none  &none                    &none              &none             &none              &none              &none
            >;
        };

        mac_varm_layer {
            bindings = <
&kp EQUAL         &kp N1             &kp N2           &kp N3            &kp N4     &kp N5  &kp N6        &kp LC(RG(LEFT))   &kp LC(RG(RIGHT))  &kp N7     &kp N8            &kp N9     &kp N0         &kp MINUS
&kp TAB           &kp Q              &kp W            &kp E             &kp R      &kp T   &kp LG(S)     &kp LG(G)          &kp Y              &kp U      &kp I             &kp O      &kp P          &kp LEFT_BRACKET
&kp ESC           &kp A              &kp S            &kp D             &kp F      &kp G   &kp LG(H)     &kp LG(L)          &kp H              &kp J      &kp K             &kp L      &kp SEMICOLON  &kp SQT
&kp RIGHT_SHIFT   &kp Z              &kp X            &kp C             &kp V      &kp B                                    &kp N              &kp M      &kp COMMA         &kp DOT    &kp FSLH       &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LEFT_COMMAND  &kp SPACE          &kp LEFT_ALT  &kp RIGHT_COMMAND                     &kp SPACE  &kp LEFT_COMMAND  &kp GRAVE  &kp BACKSLASH  &kp RIGHT_CONTROL
            >;
        };

        mac_varm_vim_layer {
            bindings = <
&kp EQUAL         &kp N1             &kp N2           &kp N3            &kp END        &kp N5        &kp N6        &kp RG(RC(LEFT))   &kp RG(RC(RIGHT))  &kp N7             &kp N8            &kp N9     &kp HOME       &kp MINUS
&kp TAB           &kp Q              &kp LC(RIGHT)    &kp E             &kp LS(LC(Z))  &kp T         &kp LG(S)     &kp LG(G)          &kp LC(C)          &kp LC(Z)          &kp I             &kp O      &kp LC(V)      &kp LEFT_BRACKET
&kp ESC           &kp A              &kp S            &kp D             &kp F          &kp G         &kp LG(H)     &kp LG(L)          &kp LEFT           &kp DOWN           &kp UP            &kp RIGHT  &kp SEMICOLON  &kp SQT
&kp RIGHT_SHIFT   &kp Z              &kp X            &kp C             &kp V          &kp LC(LEFT)                                   &kp RS(RG(LEFT))   &kp LS(RG(RIGHT))  &kp COMMA         &kp DOT    &kp LC(F)      &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LEFT_COMMAND  &kp SPACE                    &kp LEFT_ALT  &kp RIGHT_COMMAND                     &kp SPACE          &kp LEFT_COMMAND  &kp GRAVE  &kp BACKSLASH  &kp RIGHT_CONTROL
            >;
        };
    };
};
